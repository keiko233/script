const fs = require('fs');

const propFilePath = process.argv[2] || 'build.prop';
const categoryFilePath = process.argv[3] || 'prop_categories.json';
const outputFilePath = process.argv[4] || 'categorized.prop';

if (process.argv.includes('--help')) {
  console.log(`Usage: node index.js [prop_file_path] [prop_category_file_path] [output_file_path]
Description:
- prop_file_path: The path to the prop file that needs to be categorized. Default value is build.prop
- prop_category_file_path: The path to the JSON file that contains the prop category definitions. Default value is prop_categories.json
- output_file_path: The output path for the categorized prop file. Default value is categorized.prop`);
  process.exit(0);
}

const now = new Date().toISOString();

fs.readFile(propFilePath, 'utf8', (err, data) => {
  if (err) throw err;

  fs.readFile(categoryFilePath, 'utf8', (err, categoryData) => {
    if (err) throw err;

    const propCategories = JSON.parse(categoryData);
    const categorizedProps = {};

    data.split('\n').forEach(line => {
      const trimmedLine = line.trim();

      if (trimmedLine.startsWith('#') || trimmedLine === '') {
        return;
      }

      const propCategory = Object.keys(propCategories).find(category => {
        return propCategories[category].some(prefix => trimmedLine.startsWith(prefix));
      });

      if (propCategory) {
        categorizedProps[propCategory] = categorizedProps[propCategory] || [];
        categorizedProps[propCategory].push(line);
      } else {
        categorizedProps['UNKNOW PROP'] = categorizedProps['UNKNOW PROP'] || [];
        categorizedProps['UNKNOW PROP'].push(line);
      }
    });

    let categorizedPropContent = '# Generated by prop tidying script ' + now + '\n# Script Author: keiko233\n'; 
    Object.keys(categorizedProps).forEach(category => {
      categorizedPropContent += `\n# ${category}\n`;
      categorizedPropContent += categorizedProps[category].join('\n');
      categorizedPropContent += '\n';
    });

    fs.writeFile(outputFilePath, categorizedPropContent, 'utf8', err => {
      if (err) throw err;
      console.log(`Categorized prop file generated: ${outputFilePath}`);
    });
  });
});